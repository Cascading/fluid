/*
 * Copyright (c) 2007-2014 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven { url 'http://repo.spring.io/plugins-release' }
  }
  dependencies {
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
  }
}

apply from: 'etc/version.gradle'

ext.cascadingVersion = '2.6.0-wip-22'
ext.flapiVersion = '0.5.2'

allprojects() {

  apply plugin: 'idea'
  apply plugin: 'eclipse'

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'http://conjars.org/repo/' }
    maven { url = 'http://www.unquietcode.com/maven/releases' }
  }
}

ext.distDir = mkdir( "${rootDir}/build/dist" )

subprojects {

  apply plugin: 'java'
  apply plugin: 'maven'

  apply plugin: 'propdeps'
  apply plugin: 'propdeps-maven'
  apply plugin: 'propdeps-idea'
  apply plugin: 'propdeps-eclipse'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  group = 'cascading'
  version = releaseVersion

  javadoc {
    def copyright = '<i>Copyright &#169; 2007-2014 Concurrent, Inc. All Rights Reserved.</i>'

    title = "Cascading Fluid ${releaseVersion}"
    destinationDir = file( "${distDir}/javadoc/${project.name}" )

    configure( options ) {
      linkSource = true
      encoding = "UTF8"
      bottom = copyright
    }
  }

  task sourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.main.allSource
    classifier = 'sources'
  }

  task javadocJar( type: Jar, dependsOn: javadoc ) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
  }

  test {
    include '**/*Test.class'
  }

  uploadArchives {

    def deployer = repositories.mavenDeployer {
      configuration = configurations.archives

      repository( url: repoUrl ) {
        authentication( userName: repoUserName, password: repoPassword )
      }

      pom.project {
        description 'An API for data management, analytics, and machine learning on parallel computing clusters.'
        inceptionYear '2014'
        url 'http://cascading.org/'
        scm {
          url 'https://github.com/Cascading/fluid.git'
        }
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
      }
    }
    // make sure test dependencies come first, so that maven isn't getting
    // confused, when reading the generated pom
    [install.repositories.mavenInstaller, deployer]*.pom*.whenConfigured { pom ->
      def scopeOrder = [test: 1, runtime: 2, provided: 3, compile: 4].withDefault { 100 }
      pom.dependencies = pom.dependencies.sort { scopeOrder[ it.scope ] }
    }
  }
}