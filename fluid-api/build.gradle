/*
 * Copyright (c) 2007-2014 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {

  provided project( ':fluid-cascading26' )
  compile project( ':fluid-api-runtime' )

  provided group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
  provided group: 'com.google.guava', name: 'guava', version: '18.0'
  provided group: 'org.javassist', name: 'javassist', version: '3.18.2-GA'
  provided group: 'org.reflections', name: 'reflections', version: '0.9.9'

  provided group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.5'
  provided group: 'log4j', name: 'log4j', version: '1.2.16'

  testCompile group: 'cascading', name: 'cascading-local', version: cascadingVersion
  testCompile group: 'junit', name: 'junit', version: '4.11'
}

jar.doFirst {
  if( !System.properties[ 'fluid.release.final' ] )
    file( "${buildDir}/build.number.properties" ).write( "fluid.build.number=${buildNumber}" )
}

jar {
  into( 'cascading/fluid' ) {
    from '../version.properties'

    if( !System.properties[ 'fluid.release.final' ] )
      from "${buildDir}/build.number.properties"
  }
}

javadoc {

  exclude '**/builder/**'
  exclude '**/util/**'

  configure( options ) {

    links << 'http://docs.cascading.org/cascading/2.6/javadoc/cascading-core/'

    linksOffline( '../../../fluid-cascading25', "http://${rootProject.s3UploadDocs.destination}javadoc/fluid-cascading25".toString() )
  }
}